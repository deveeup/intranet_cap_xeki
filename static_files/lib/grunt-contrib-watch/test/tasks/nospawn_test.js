"use strict";function cleanUp(){useFixtures.forEach(function(e){helper.cleanUp(e+"/node_modules")})}var grunt=require("grunt"),path=require("path"),fs=require("fs"),helper=require("./helper"),fixtures=helper.fixtures,useFixtures=["nospawn"];exports.nospawn={setUp:function(e){cleanUp(),useFixtures.forEach(function(e){fs.symlinkSync(path.join(__dirname,"../../node_modules"),path.join(fixtures,e,"node_modules"))}),e()},tearDown:function(e){cleanUp(),e()},nospawn:function(e){e.expect(3);var n=path.resolve(fixtures,"nospawn");helper.assertTask(["server","watch"],{cwd:n})(function(){grunt.file.write(path.join(n,"lib","nospawn.js"),"var nospawn = true;")},function(n){helper.verboseLog(n);var t=n.match(new RegExp('Running "watch" task',"g")).length;e.equal(t,2,"Watch should have fired twice."),e.ok(-1!==n.indexOf("Server is listening..."),"server should have been started."),e.ok(-1!==n.indexOf("Server is talking!"),"server should have responded."),e.done()})},interrupt:function(e){e.expect(2);var n=path.resolve(fixtures,"nospawn");helper.assertTask("watch",{cwd:n})([function(){var e="var interrupt = true;";grunt.file.write(path.join(n,"lib","interrupt.js"),e),setTimeout(function(){grunt.file.write(path.join(n,"lib","interrupt.js"),e)},1e3)},function(){}],function(n){helper.verboseLog(n);var t=n.match(new RegExp('Running "long" task',"g")).length;e.equal(t,4,"long task should have been ran only 4 times."),e.ok(-1!==n.indexOf("have been interrupted"),"tasks should have been interrupted."),e.done()})}};