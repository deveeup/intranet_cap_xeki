"use strict";function cleanUp(){helper.cleanUp(["livereload/node_modules"])}function request(e,r){var o="";http.request({hostname:"localhost",port:e},function(e){e.setEncoding("utf8"),e.on("data",function(e){o+=e}),e.on("end",function(){r(o)})}).end()}var grunt=require("grunt"),path=require("path"),fs=require("fs"),http=require("http"),helper=require("./helper"),fixtures=helper.fixtures;exports.livereload={setUp:function(e){cleanUp(),fs.symlinkSync(path.join(__dirname,"../../node_modules"),path.join(fixtures,"livereload","node_modules")),e()},tearDown:function(e){cleanUp(),e()},basic:function(e){e.expect(4);var r="",o=path.resolve(fixtures,"livereload");helper.assertTask(["watch:basic","-v"],{cwd:o})([function(){request(35729,function(e){r+=e,grunt.file.write(path.join(o,"lib","one.js"),"var one = true;")})}],function(o){o=helper.unixify(o),helper.verboseLog(o),e.ok(-1!==o.indexOf("I ran before livereload."),"task should have ran before live reload."),e.ok(-1!==o.indexOf("Live reload server started on port: 35729"),"live reload server should have been started on port 35729."),e.ok(-1!==o.indexOf("Live reloading lib/one.js..."),"live reload should have triggered on lib/one.js"),r=JSON.parse(r),e.equal(r.tinylr,"Welcome","tinylr server should have welcomed you."),e.done()})},customport:function(e){e.expect(4);var r="",o=path.resolve(fixtures,"livereload");helper.assertTask(["watch:customport","-v"],{cwd:o})([function(){request(8675,function(e){r+=e,grunt.file.write(path.join(o,"lib","one.js"),"var one = true;")})}],function(o){o=helper.unixify(o),helper.verboseLog(o),e.ok(-1!==o.indexOf("I ran before livereload."),"task should have ran before live reload."),e.ok(-1!==o.indexOf("Live reload server started on port: 8675"),"live reload server should have been started on port 35729."),e.ok(-1!==o.indexOf("Live reloading lib/one.js..."),"live reload should have triggered on lib/one.js"),r=JSON.parse(r),e.equal(r.tinylr,"Welcome","tinylr server should have welcomed you."),e.done()})},multiplefiles:function(e){e.expect(4);var r="",o=path.resolve(fixtures,"livereload");helper.assertTask(["watch:multiplefiles","-v"],{cwd:o})([function(){request(9876,function(e){r+=e,grunt.file.write(path.join(o,"lib","one.js"),"var one = true;"),grunt.file.write(path.join(o,"lib","two.js"),"var two = true;")})}],function(o){o=helper.unixify(o),helper.verboseLog(o),e.ok(-1!==o.indexOf("I ran before livereload."),"task should have ran before live reload."),e.ok(-1!==o.indexOf("Live reload server started on port: 9876"),"live reload server should have been started on port 35729."),e.ok(/Live reloading (lib\/one\.js, lib\/two.js|lib\/two.js, lib\/one.js)\.\.\./.test(o),"live reload should have triggered on lib/one.js and lib/two.js"),r=JSON.parse(r),e.equal(r.tinylr,"Welcome","tinylr server should have welcomed you."),e.done()})},nospawn:function(e){e.expect(4);var r="",o=path.resolve(fixtures,"livereload");helper.assertTask(["watch:nospawn","-v"],{cwd:o})([function(){request(1337,function(e){r+=e,grunt.file.write(path.join(o,"lib","one.js"),"var one = true;")})}],function(o){o=helper.unixify(o),helper.verboseLog(o),e.ok(-1!==o.indexOf("I ran before livereload."),"task should have ran before live reload."),e.ok(-1!==o.indexOf("Live reload server started on port: 1337"),"live reload server should have been started on port 1337."),e.ok(-1!==o.indexOf("Live reloading lib/one.js..."),"live reload should have triggered on lib/one.js"),r=JSON.parse(r),e.equal(r.tinylr,"Welcome","tinylr server should have welcomed you."),e.done()})},notasks:function(e){e.expect(3);var r="",o=path.resolve(fixtures,"livereload");helper.assertTask(["watch:notasks","-v"],{cwd:o})([function(){request(35729,function(e){r+=e,grunt.file.write(path.join(o,"lib","one.js"),"var one = true;")})}],function(o){o=helper.unixify(o),helper.verboseLog(o),e.ok(-1!==o.indexOf("Live reload server started on port: 35729"),"live reload server should have been started on port 35729."),e.ok(-1!==o.indexOf("Live reloading lib/one.js..."),"live reload should have triggered on lib/one.js"),r=JSON.parse(r),e.equal(r.tinylr,"Welcome","tinylr server should have welcomed you."),e.done()})},onlytriggeron:function(e){e.expect(2);var r=path.resolve(fixtures,"livereload");helper.assertTask(["watch","-v"],{cwd:r})([function(){request(35729,function(e){grunt.file.write(path.join(r,"sass","one.scss"),"#one {}")})}],function(r){r=helper.unixify(r),helper.verboseLog(r),e.ok(-1===r.indexOf("Live reloading sass/one.scss"),"Should not trigger live reload on non livereload targets."),e.ok(-1!==r.indexOf("Live reloading css/one.css"),"Should trigger live reload when other tasks trigger livereload targets."),e.done()})}};