"use strict";module.exports=function(s){s.file.setBase("../fixtures/files"),s.initConfig({build:"123",mappings:{cwd:"src/",dest:"foo/",ext:".bar",rename:function(s,e){return s+"baz/"+e.replace(/\.js$/,"<%= mappings.ext %>")}},run:{options:{a:1,b:11},"dist/built.js":"src/*1.js","dist/built1.js":["src/*1.js","src/*2.js"],built:{options:{a:2,c:22},src:["src/*1.js","src/*2.js"],dest:"dist/built-<%= build %>.js",extra:123},long1:{options:{a:3,c:33},files:{"dist/built-<%= build %>-a.js":["src/*1.js"],"dist/built-<%= build %>-b.js":["src/*1.js","src/*2.js"]}},long2:{options:{a:4,c:44},files:[{"dist/built-<%= build %>-a.js":["src/*.whoops"]},{"dist/built-<%= build %>-b.js":["src/*1.js","src/*2.js"]}]},long3:{options:{a:5,c:55},files:[{dest:"dist/built-<%= build %>-a.js",src:["src/*2.js"],extra:456},{dest:"dist/built-<%= build %>-b.js",src:["src/*1.js","src/*2.js"],extra:789}]},built_mapping:{options:{a:6,c:66},expand:!0,cwd:"<%= mappings.cwd %>",src:["*1.js","*2.js"],dest:"<%= mappings.dest %>",rename:"<%= mappings.rename %>",extra:123},long3_mapping:{options:{a:7,c:77},files:[{expand:!0,cwd:"<%= mappings.cwd %>",src:["*1.js","*2.js"],dest:"<%= mappings.dest %>",rename:"<%= mappings.rename %>",extra:123}]},long4_mapping:{options:{a:8,c:88},files:["<%= run.long3_mapping.files %>"]},long5_mapping:{options:{a:9,c:99},files:["<%= run.long3_mapping.files %>","<%= run.long4_mapping.files %>"]},no_files_or_options:{}}});var e={},i=[],t=-1;s.registerMultiTask("run","Store stuff for later testing.",function(){var s=this.nameArgs;e[s]={options:this.options({d:9}),files:this.files};var r;t++%2==0?(r=this.async(),setTimeout(function(){i.push(t),r()},10)):i.push(t)});var r={"run:no_files_or_options":{options:{a:1,b:11,d:9},files:[]},"run:dist/built.js":{options:{a:1,b:11,d:9},files:[{dest:"dist/built.js",src:["src/file1.js"],orig:{dest:"dist/built.js",src:["src/*1.js"]}}]},"run:dist/built1.js":{options:{a:1,b:11,d:9},files:[{dest:"dist/built1.js",src:["src/file1.js","src/file2.js"],orig:{dest:"dist/built1.js",src:["src/*1.js","src/*2.js"]}}]},"run:built":{options:{a:2,b:11,c:22,d:9},files:[{dest:"dist/built-123.js",src:["src/file1.js","src/file2.js"],extra:123,orig:{dest:"dist/built-123.js",src:["src/*1.js","src/*2.js"],extra:123}}]},"run:long1":{options:{a:3,b:11,c:33,d:9},files:[{dest:"dist/built-123-a.js",src:["src/file1.js"],orig:{dest:"dist/built-123-a.js",src:["src/*1.js"]}},{dest:"dist/built-123-b.js",src:["src/file1.js","src/file2.js"],orig:{dest:"dist/built-123-b.js",src:["src/*1.js","src/*2.js"]}}]},"run:long2":{options:{a:4,b:11,c:44,d:9},files:[{dest:"dist/built-123-a.js",src:[],orig:{dest:"dist/built-123-a.js",src:["src/*.whoops"]}},{dest:"dist/built-123-b.js",src:["src/file1.js","src/file2.js"],orig:{dest:"dist/built-123-b.js",src:["src/*1.js","src/*2.js"]}}]},"run:long3":{options:{a:5,b:11,c:55,d:9},files:[{dest:"dist/built-123-a.js",src:["src/file2.js"],extra:456,orig:{dest:"dist/built-123-a.js",src:["src/*2.js"],extra:456}},{dest:"dist/built-123-b.js",src:["src/file1.js","src/file2.js"],extra:789,orig:{src:["src/*1.js","src/*2.js"],dest:"dist/built-123-b.js",extra:789}}]},"run:built_mapping":{options:{a:6,b:11,c:66,d:9},files:[{dest:"foo/baz/file1.bar",src:["src/file1.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("run.built_mapping.rename"),extra:123}},{dest:"foo/baz/file2.bar",src:["src/file2.js"],extra:123,orig:{expand:!0,cwd:s.config.get("run.built_mapping.cwd"),src:["*1.js","*2.js"],dest:s.config.get("run.built_mapping.dest"),rename:s.config.get("run.built_mapping.rename"),extra:123}}]},"run:long3_mapping":{options:{a:7,b:11,c:77,d:9},files:[{dest:"foo/baz/file1.bar",src:["src/file1.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("mappings.rename"),extra:123}},{dest:"foo/baz/file2.bar",src:["src/file2.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("run.built_mapping.rename"),extra:123}}]},"run:long4_mapping":{options:{a:8,b:11,c:88,d:9},files:[{dest:"foo/baz/file1.bar",src:["src/file1.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("mappings.rename"),extra:123}},{dest:"foo/baz/file2.bar",src:["src/file2.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("run.built_mapping.rename"),extra:123}}]},"run:long5_mapping":{options:{a:9,b:11,c:99,d:9},files:[{dest:"foo/baz/file1.bar",src:["src/file1.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("mappings.rename"),extra:123}},{dest:"foo/baz/file2.bar",src:["src/file2.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("run.built_mapping.rename"),extra:123}},{dest:"foo/baz/file1.bar",src:["src/file1.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("mappings.rename"),extra:123}},{dest:"foo/baz/file2.bar",src:["src/file2.js"],extra:123,orig:{expand:!0,cwd:s.config.get("mappings.cwd"),src:["*1.js","*2.js"],dest:s.config.get("mappings.dest"),rename:s.config.get("run.built_mapping.rename"),extra:123}}]}},n=require("assert"),a=require("difflet")({indent:2,comment:!0}),o=function(e,i){try{i()}catch(i){throw s.log.subhead("Assertion Failure in "+e),console.log(a.compare(i.expected,i.actual)),new Error(i.message)}};s.registerTask("test","Test file and option objects.",function(){var s="run:"+this.nameArgs.replace(/^.*?:/,""),i="run:all"===s,t=i?e:e[s],a=i?r:r[s];o(this.name,function(){n.deepEqual(t,a,"Actual should match expected.")}),i?e={}:delete e[s]}),s.registerTask("test:counters","Test function execution order.",function(){o(this.name,function(){n.equal(i.length,t+1,"Task functions should have run the correct number of times.");for(var s=[],e=0;e<i.length;e++)s.push(e);n.deepEqual(i,s,"Task functions should have actually executed in-order.")})}),s.registerTask("default",["run:no_files_or_options","test:no_files_or_options","run:dist/built.js","test:dist/built.js","run:dist/built1.js","test:dist/built1.js","run:built","test:built","run:long1","test:long1","run:long2","test:long2","run:long3","test:long3","run:built_mapping","test:built_mapping","run:long3_mapping","test:long3_mapping","run:long4_mapping","test:long4_mapping","run:long5_mapping","test:long5_mapping","run","test:all","test:counters"])};