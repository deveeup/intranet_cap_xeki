"use strict";function gRequire(e){return grunt[e]=require("./grunt/"+e)}function gExpose(e,t,r){grunt[r||t]=e[t].bind(e)}var path=require("path");require("coffee-script");var grunt=module.exports={},util=require("grunt-legacy-util");grunt.util=util,grunt.util.task=require("./util/task");var Log=require("grunt-legacy-log").Log,log=new Log({grunt:grunt});grunt.log=log,gRequire("template"),gRequire("event");var fail=gRequire("fail");gRequire("file");var option=gRequire("option"),config=gRequire("config"),task=gRequire("task"),help=gRequire("help");gRequire("cli");var verbose=grunt.verbose=log.verbose;grunt.package=require("../package.json"),grunt.version=grunt.package.version,gExpose(task,"registerTask"),gExpose(task,"registerMultiTask"),gExpose(task,"registerInitTask"),gExpose(task,"renameTask"),gExpose(task,"loadTasks"),gExpose(task,"loadNpmTasks"),gExpose(config,"init","initConfig"),gExpose(fail,"warn"),gExpose(fail,"fatal"),grunt.tasks=function(e,t,r){option.init(t);var i,n;if(option("version"))return log.writeln("grunt v"+grunt.version),void(option("verbose")&&(verbose.writeln("Install path: "+path.resolve(__dirname,"..")),grunt.log.muted=!0,grunt.task.init([],{help:!0}),grunt.log.muted=!1,i=Object.keys(grunt.task._tasks).sort(),verbose.writeln("Available tasks: "+i.join(" ")),n=[],Object.keys(grunt.cli.optlist).forEach(function(e){var t=grunt.cli.optlist[e];n.push("--"+(t.negate?"no-":"")+e),t.short&&n.push("-"+t.short)}),verbose.writeln("Available options: "+n.join(" "))));if(log.initColors(),option("help"))help.display();else{verbose.header("Initializing").writeflags(option.flags(),"Command-line options");var o=e&&e.length>0;e=task.parseArgs([o?e:"default"]),task.init(e),verbose.writeln(),o||verbose.writeln("No tasks specified, running default tasks."),verbose.writeflags(e,"Running tasks");var s=function(e){fail.fatal(e,fail.code.TASK_FAILURE)};process.on("uncaughtException",s),task.options({error:function(e){fail.warn(e,fail.code.TASK_FAILURE)},done:function(){process.removeListener("uncaughtException",s),fail.report(),r?r():util.exit(0)}}),e.forEach(function(e){task.run(e)}),task.start({asyncDone:!0})}};